{"version":3,"sources":["components/Balance/Balance.module.css","components/Transaction/Transaction.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/Transaction/Transaction.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js","components/Controls/Controls.module.css","components/TransactionHistory/TransactionHistory.module.css"],"names":["module","exports","Controls","amount","handleChange","onDeposit","onWithdraw","className","css","container","controls","onChange","value","placeholder","type","name","onClick","Balance","balance","income","expenses","Transaction","transactions","date","trText","TransactionHistory","history","theadTitle","map","elem","key","id","Dashboard","state","resetAmount","setState","e","Number","target","transaction","shortid","generate","Date","toLocaleString","alert","prevState","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2b91ef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2d6xJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trText\":\"Transaction_trText__2PT05\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Controls.module.css';\n\nconst Controls = ({ amount, handleChange, onDeposit, onWithdraw }) => {\n  return (\n    <div className={css.container}>\n      <section className={css.controls}>\n        <input\n          onChange={handleChange}\n          value={amount}\n          placeholder=\"введите сумму операции...\"\n          type=\"number\"\n          name=\"amount\"\n        />\n        <button onClick={onDeposit} type=\"button\">\n          Deposit\n        </button>\n        <button onClick={onWithdraw} value={amount} type=\"button\">\n          Wihtdraw\n        </button>\n      </section>\n    </div>\n  );\n};\n\nControls.propTypes = {\n  amount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => {\n  return (\n    <>\n      <section className={css.balance}>\n        <span>⬆️ {income}$</span>\n        <span>⬇️ {expenses}$</span>\n        <span>Balance: {balance}$</span>\n      </section>\n    </>\n  );\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Transaction.module.css';\n\nconst Transaction = ({ transactions: { type, amount, date } }) => {\n  return (\n    <>\n      <tr className={css.trText}>\n        <td>{type}</td>\n        <td>{amount}</td>\n        <td>{date}</td>\n      </tr>\n    </>\n  );\n};\n\nTransaction.propTypes = {\n  transactions: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Transaction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './TransactionHistory.module.css';\nimport Transaction from '../Transaction/Transaction';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={css.history}>\n      <thead>\n        <tr className={css.theadTitle}>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(elem => (\n          <Transaction transactions={elem} key={elem.id} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n    .isRequired,\n};\n\nexport default TransactionHistory;\n","/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    amount: '',\n    balance: 0,\n    income: 0,\n    expenses: 0,\n  };\n\n  resetAmount = () => {\n    this.setState({ amount: '' });\n  };\n\n  handleChange = e => {\n    const amount = Number(e.target.value);\n    this.setState({ amount });\n  };\n\n  onDeposit = () => {\n    const { amount, balance, transactions } = this.state;\n    const transaction = {\n      id: shortid.generate(),\n      type: 'deposit',\n      amount,\n      date: new Date().toLocaleString(),\n    };\n    if (amount > 0) {\n      this.setState({\n        balance: balance + transaction.amount,\n        transactions: [...transactions, transaction],\n      });\n      this.income();\n      this.resetAmount();\n    } else {\n      alert('Введите сумму больше нуля для проведения операции!');\n      this.resetAmount();\n    }\n  };\n\n  onWithdraw = () => {\n    const { amount, balance, transactions } = this.state;\n    const transaction = {\n      id: shortid.generate(),\n      type: 'withdraw',\n      amount,\n      date: new Date().toLocaleString(),\n    };\n    if (amount <= 0) {\n      alert('Введите сумму больше нуля для проведения операции!');\n      this.resetAmount();\n    } else if (balance < amount) {\n      alert('На счету недостаточно средств для проведения операции!');\n      this.resetAmount();\n    } else {\n      this.setState({\n        balance: balance - transaction.amount,\n        transactions: [...transactions, transaction],\n      });\n      this.expenses();\n      this.resetAmount();\n    }\n  };\n\n  income = () => {\n    const { amount } = this.state;\n    this.setState(prevState => ({ income: prevState.income + amount }));\n  };\n\n  expenses = () => {\n    const { amount } = this.state;\n    this.setState(prevState => ({ expenses: prevState.expenses + amount }));\n  };\n\n  render() {\n    const { transactions, amount, balance, income, expenses } = this.state;\n    return (\n      <div className=\"dashboard\">\n        <Controls\n          amount={amount}\n          handleChange={this.handleChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n        />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Controls_container__2zPhm\",\"controls\":\"Controls_controls__S0Zsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1mNaZ\",\"theadTitle\":\"TransactionHistory_theadTitle__Va8ay\"};"],"sourceRoot":""}